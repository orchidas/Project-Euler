# -*- coding: utf-8 -*-
"""
Created on Tue Jan 12 02:17:44 2016

@author: ORCHISAMA
"""
#Problem - 44

#Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
#
#1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#
#It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
#
#Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal 
#and D = |Pk − Pj| is minimised; what is the value of D?

#check first 1000 pentagonal numbers

import itertools 
  
def isPrime(n):
    for i in range(2,n/2 + 1):
        if n % i == 0:
            return False
    return True   

    
def exists(num,lst):
    for item in lst:
        if num == item:
            return True
    return False
   
   
def generatePermutations(n):
    alist = list()
    str1 = str(n)
    permutations = list()
    lst = set(itertools.permutations(str1))
    for item in lst:
        permstr = ''
        for character in item:
            permstr = permstr + character
        permutations.append(int(permstr))
    
    for perm1 in permutations:
        if perm1 == n:
            continue
        res = isPrime(perm1)
        if res is True:
            perm2 = perm1 + abs(perm1 - n)
            if perm2 == n or exists(perm2, permutations) is False:
                continue
            else:
                if isPrime(perm2) is True:
                    alist.append(n)
                    alist.append(perm1)
                    alist.append(perm2)
                    return alist
     
    return alist
    
                
count = 0    
for n in range(1000,10000):
    alist = list()
    flag = isPrime(n)
    if flag is False:
        continue
    else:
        alist = generatePermutations(n)
        if len(alist) != 3:
            continue
        else:
            count = count + 1
            alist.sort()
            string = ''
            for item in alist:
                string = string + str(item)
            print string    
    if count == 2:
        break
      